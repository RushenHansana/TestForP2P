{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\disan\\\\OneDrive\\\\Documents\\\\NCINGA\\\\Test\\\\users\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io.connect(\"http://localhost:5000\"); // Connect to signaling server\n\nfunction App() {\n  _s();\n  const [roomID, setRoomID] = useState(\"\");\n  const [stream, setStream] = useState(null);\n  const myVideo = useRef();\n  const peerConnection = useRef(null);\n  const remoteVideo = useRef();\n  useEffect(() => {\n    // Extract room ID from URL\n    const url = window.location.href;\n    const splitURL = url.split(\"/\");\n    const roomIDFromURL = splitURL[splitURL.length - 1];\n    setRoomID(roomIDFromURL);\n    console.log(\"Room ID:\", roomIDFromURL);\n\n    // Get user media\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(stream => {\n      setStream(stream);\n      myVideo.current.srcObject = stream;\n\n      // Establish connection with signaling server\n      socket.emit(\"joinRoom\", roomIDFromURL);\n    }).catch(error => {\n      console.error(\"Error accessing media devices:\", error);\n    });\n    socket.on(\"receiveIceCandidate\", data => {\n      // Add the received ICE candidate to the peer connection\n      if (peerConnection.current) {\n        peerConnection.current.addIceCandidate(data.candidate);\n      }\n    });\n    return () => {\n      // Clean up event listeners\n      socket.off(\"receiveIceCandidate\");\n      socket.off(\"callAccepted\");\n    };\n  }, [stream]); // Add stream to the dependency array\n\n  const handleToggleMic = () => {\n    if (stream) {\n      const audioTracks = stream.getAudioTracks();\n      audioTracks.forEach(track => {\n        track.enabled = !track.enabled;\n      });\n    }\n  };\n  const handleToggleCamera = () => {\n    if (stream) {\n      const videoTracks = stream.getVideoTracks();\n      videoTracks.forEach(track => {\n        track.enabled = !track.enabled;\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: myVideo,\n      autoPlay: true,\n      muted: true,\n      style: {\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: remoteVideo,\n      autoPlay: true,\n      style: {\n        width: \"300px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleMic,\n      children: \"Toggle Mic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleToggleCamera,\n      children: \"Toggle Camera\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"tpCRMJsDigq78GDPB85Kz8d+RvY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","io","jsxDEV","_jsxDEV","socket","connect","App","_s","roomID","setRoomID","stream","setStream","myVideo","peerConnection","remoteVideo","url","window","location","href","splitURL","split","roomIDFromURL","length","console","log","navigator","mediaDevices","getUserMedia","video","audio","then","current","srcObject","emit","catch","error","on","data","addIceCandidate","candidate","off","handleToggleMic","audioTracks","getAudioTracks","forEach","track","enabled","handleToggleCamera","videoTracks","getVideoTracks","children","ref","autoPlay","muted","style","width","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/disan/OneDrive/Documents/NCINGA/Test/users/src/App.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io.connect(\"http://localhost:5000\"); // Connect to signaling server\r\n\r\nfunction App() {\r\n  const [roomID, setRoomID] = useState(\"\");\r\n  const [stream, setStream] = useState(null);\r\n  const myVideo = useRef();\r\n  const peerConnection = useRef(null);\r\n  const remoteVideo = useRef();\r\n\r\n  useEffect(() => {\r\n    // Extract room ID from URL\r\n    const url = window.location.href;\r\n    const splitURL = url.split(\"/\");\r\n    const roomIDFromURL = splitURL[splitURL.length - 1];\r\n    setRoomID(roomIDFromURL);\r\n    console.log(\"Room ID:\", roomIDFromURL);\r\n\r\n    // Get user media\r\n    navigator.mediaDevices\r\n      .getUserMedia({\r\n        video: true,\r\n        audio: true,\r\n      })\r\n      .then((stream) => {\r\n        setStream(stream);\r\n        myVideo.current.srcObject = stream;\r\n\r\n        // Establish connection with signaling server\r\n        socket.emit(\"joinRoom\", roomIDFromURL);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error accessing media devices:\", error);\r\n      });\r\n\r\n    socket.on(\"receiveIceCandidate\", (data) => {\r\n      // Add the received ICE candidate to the peer connection\r\n      if (peerConnection.current) {\r\n        peerConnection.current.addIceCandidate(data.candidate);\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n    return () => {\r\n      // Clean up event listeners\r\n      socket.off(\"receiveIceCandidate\");\r\n      socket.off(\"callAccepted\");\r\n    };\r\n  }, [stream]); // Add stream to the dependency array\r\n\r\n  const handleToggleMic = () => {\r\n    if (stream) {\r\n      const audioTracks = stream.getAudioTracks();\r\n      audioTracks.forEach((track) => {\r\n        track.enabled = !track.enabled;\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleToggleCamera = () => {\r\n    if (stream) {\r\n      const videoTracks = stream.getVideoTracks();\r\n      videoTracks.forEach((track) => {\r\n        track.enabled = !track.enabled;\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <video ref={myVideo} autoPlay muted style={{ width: \"300px\" }} />\r\n      <video ref={remoteVideo} autoPlay style={{ width: \"300px\" }} />\r\n      <button onClick={handleToggleMic}>Toggle Mic</button>\r\n      <button onClick={handleToggleCamera}>Toggle Camera</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}